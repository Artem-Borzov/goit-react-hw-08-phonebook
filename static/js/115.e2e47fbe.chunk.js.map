{"version":3,"file":"static/js/115.e2e47fbe.chunk.js","mappings":"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","sources":["components/ContactForm/Form/Form.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","redux/filter/filterSelectors.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ name = '', number = '', btnText, onSubmit }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n\n    if (name === '' || number === '') {\n      return alert('Fill all fields');\n    }\n\n    const contactToAdd = {\n      name,\n      number,\n    };\n    onSubmit(contactToAdd);\n\n    setContactName('');\n    setContactNumber('');\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={contactNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">{btnText}</button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  btnText: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport { Form } from './Form/Form';\n\nexport const ContactForm = ({ handleClose }) => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const formSubmitHandler = contactToAdd => {\n    const nameMatches = contacts.find(\n      contact => contact.name.toLowerCase() === contactToAdd.name.toLowerCase()\n    );\n\n    if (nameMatches) {\n      return alert(`${contactToAdd.name} is already in contacts.`);\n    }\n\n    addContact(contactToAdd);\n    alert('You add new contact.');\n  };\n\n  return <Form onSubmit={formSubmitHandler} btnText=\"Add contact\" />;\n};\n","import React from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\n\nexport const ContactsListItem = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <li>\n      {name}: {number}\n      <button type=\"button\" id={id} onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","export const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactsListItem } from 'components/ContactListItem/ContactListItem';\nimport { getFilter } from 'redux/filter/filterSelectors';\n\nexport const ContactsList = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = !contacts\n    ? []\n    : contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n\n  return (\n    <>\n      {contacts?.length === 0 ? (\n        <p>No contacts yet</p>\n      ) : (\n        <>\n          <p>Total contacts: {visibleContacts.length}</p>\n          <ul>\n            {visibleContacts.map(({ id, name, number }) => (\n              <ContactsListItem key={id} id={id} name={name} number={number} />\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterArea = styled.label`\n  display: flex;\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport { FilterArea } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <FilterArea>\n      Magic Finder! Enter the search query\n      <input type=\"text\" value={filter} onChange={changeFilter} name=\"filter\" />\n    </FilterArea>\n  );\n};\n","import { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const { data, error, isFetching } = useFetchContactsQuery(\n    { count: 5 },\n    { refetchOnMountOrArgChange: true }\n  );\n\n  return (\n    <div>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n\n      {data && <ContactsList />}\n      {isFetching && !error && <Loader />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","name","number","btnText","onSubmit","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","e","target","value","preventDefault","form","elements","trim","alert","reset","type","onChange","pattern","title","required","ContactForm","handleClose","useAddContactMutation","addContact","contacts","useFetchContactsQuery","data","contactToAdd","find","contact","toLowerCase","ContactsListItem","id","useDeleteContactMutation","deleteContact","onClick","getFilter","state","filter","ContactsList","useSelector","visibleContacts","includes","length","map","FilterArea","styled","Filter","dispatch","useDispatch","setFilter","currentTarget","count","refetchOnMountOrArgChange","error","isFetching","Loader"],"sourceRoot":""}